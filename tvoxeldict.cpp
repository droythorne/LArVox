//
// File generated by rootcint at Sun Apr  4 12:05:52 2010

// Do NOT change. Changes will be lost next time file is generated
//

#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "tvoxeldict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace LArVox {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void LArVox_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("LArVox", 0 /*version*/, "./src/voxels/TVoxel.hpp", 8,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &LArVox_Dictionary, 0);
         return &instance;
      }
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void LArVox_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void LArVoxcLcLTVoxel_ShowMembers(void *obj, TMemberInspector &R__insp, char *R__parent);
   static void *new_LArVoxcLcLTVoxel(void *p = 0);
   static void *newArray_LArVoxcLcLTVoxel(Long_t size, void *p);
   static void delete_LArVoxcLcLTVoxel(void *p);
   static void deleteArray_LArVoxcLcLTVoxel(void *p);
   static void destruct_LArVoxcLcLTVoxel(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArVox::TVoxel*)
   {
      ::LArVox::TVoxel *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArVox::TVoxel >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArVox::TVoxel", ::LArVox::TVoxel::Class_Version(), "./src/voxels/TVoxel.hpp", 9,
                  typeid(::LArVox::TVoxel), DefineBehavior(ptr, ptr),
                  &::LArVox::TVoxel::Dictionary, isa_proxy, 0,
                  sizeof(::LArVox::TVoxel) );
      instance.SetNew(&new_LArVoxcLcLTVoxel);
      instance.SetNewArray(&newArray_LArVoxcLcLTVoxel);
      instance.SetDelete(&delete_LArVoxcLcLTVoxel);
      instance.SetDeleteArray(&deleteArray_LArVoxcLcLTVoxel);
      instance.SetDestructor(&destruct_LArVoxcLcLTVoxel);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArVox::TVoxel*)
   {
      return GenerateInitInstanceLocal((::LArVox::TVoxel*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArVox::TVoxel*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

      namespace LArVox {
//______________________________________________________________________________
TClass *TVoxel::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TVoxel::Class_Name()
{
   return "LArVox::TVoxel";
}

//______________________________________________________________________________
const char *TVoxel::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVox::TVoxel*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TVoxel::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVox::TVoxel*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TVoxel::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVox::TVoxel*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TVoxel::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVox::TVoxel*)0x0)->GetClass();
   return fgIsA;
}

} // namespace LArVox
      namespace LArVox {
//______________________________________________________________________________
void TVoxel::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArVox::TVoxel.

   //This works around a msvc bug and should be harmless on other platforms
   typedef ::LArVox::TVoxel thisClass;
   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      vox_coords_.Streamer(R__b);
      scalars_.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, thisClass::IsA());
   } else {
      R__c = R__b.WriteVersion(thisClass::IsA(), kTRUE);
      TObject::Streamer(R__b);
      vox_coords_.Streamer(R__b);
      scalars_.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

} // namespace LArVox
//______________________________________________________________________________
      namespace LArVox {
void TVoxel::ShowMembers(TMemberInspector &R__insp, char *R__parent)
{
      // Inspect the data members of an object of class LArVox::TVoxel.
      TClass *R__cl = ::LArVox::TVoxel::IsA();
      Int_t R__ncp = strlen(R__parent);
      if (R__ncp || R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__parent, "vox_coords_", &vox_coords_);
      vox_coords_.ShowMembers(R__insp, strcat(R__parent,"vox_coords_.")); R__parent[R__ncp] = 0;
      R__insp.Inspect(R__cl, R__parent, "scalars_", &scalars_);
      scalars_.ShowMembers(R__insp, strcat(R__parent,"scalars_.")); R__parent[R__ncp] = 0;
      TObject::ShowMembers(R__insp, R__parent);
}

} // namespace LArVox
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArVoxcLcLTVoxel(void *p) {
      return  p ? new(p) ::LArVox::TVoxel : new ::LArVox::TVoxel;
   }
   static void *newArray_LArVoxcLcLTVoxel(Long_t nElements, void *p) {
      return p ? new(p) ::LArVox::TVoxel[nElements] : new ::LArVox::TVoxel[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArVoxcLcLTVoxel(void *p) {
      delete ((::LArVox::TVoxel*)p);
   }
   static void deleteArray_LArVoxcLcLTVoxel(void *p) {
      delete [] ((::LArVox::TVoxel*)p);
   }
   static void destruct_LArVoxcLcLTVoxel(void *p) {
      typedef ::LArVox::TVoxel current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArVox::TVoxel

/********************************************************
* tvoxeldict.cpp
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && (__GNUC__ > 3) && (__GNUC_MINOR__ > 1)
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtabletvoxeldict();

extern "C" void G__set_cpp_environmenttvoxeldict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("src/voxels/TVoxel.hpp");
  G__cpp_reset_tagtabletvoxeldict();
}
#include <new>
extern "C" int G__cpp_dllrevtvoxeldict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* LArVox */

/* LArVox::TVoxel */
static int G__tvoxeldict_179_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVox::TVoxel* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVox::TVoxel[n];
     } else {
       p = new((void*) gvp) LArVox::TVoxel[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVox::TVoxel;
     } else {
       p = new((void*) gvp) LArVox::TVoxel;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVox::TVoxel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArVox::TVoxel(*(TLorentzVector*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) LArVox::TVoxel(*(TLorentzVector*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVox::TVoxel* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArVox::TVoxel(*(TLorentzVector*) libp->para[0].ref, *(TArrayD*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) LArVox::TVoxel(*(TLorentzVector*) libp->para[0].ref, *(TArrayD*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArVox::TVoxel::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVox::TVoxel::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArVox::TVoxel::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArVox::TVoxel::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVox::TVoxel*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVox::TVoxel::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVox::TVoxel::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVox::TVoxel::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__tvoxeldict_179_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVox::TVoxel::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__tvoxeldict_179_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArVox::TVoxel* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArVox::TVoxel(*(LArVox::TVoxel*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   result7->type = 'u';
   result7->tagnum = G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArVox::TVoxel G__TLArVoxcLcLTVoxel;
static int G__tvoxeldict_179_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArVox::TVoxel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArVox::TVoxel*) (soff+(sizeof(LArVox::TVoxel)*i)))->~G__TLArVoxcLcLTVoxel();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArVox::TVoxel*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArVox::TVoxel*) (soff))->~G__TLArVoxcLcLTVoxel();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__tvoxeldict_179_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVox::TVoxel* dest = (LArVox::TVoxel*) G__getstructoffset();
   *dest = *(LArVox::TVoxel*) libp->para[0].ref;
   const LArVox::TVoxel& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* LArVox */

/* LArVox::TVoxel */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunctvoxeldict {
 public:
  G__Sizep2memfunctvoxeldict(): p(&G__Sizep2memfunctvoxeldict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunctvoxeldict::*p)();
};

size_t G__get_sizep2memfunctvoxeldict()
{
  G__Sizep2memfunctvoxeldict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancetvoxeldict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel))) {
     LArVox::TVoxel *G__Lderived;
     G__Lderived=(LArVox::TVoxel*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel),G__get_linked_tagnum(&G__tvoxeldictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetabletvoxeldict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__tvoxeldictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__tvoxeldictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__tvoxeldictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__tvoxeldictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__tvoxeldictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* LArVox */
static void G__setup_memvarLArVox(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__tvoxeldictLN_LArVox));
   {
   }
   G__tag_memvar_reset();
}


   /* LArVox::TVoxel */
static void G__setup_memvarLArVoxcLcLTVoxel(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel));
   { LArVox::TVoxel *p; p=(LArVox::TVoxel*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->vox_coords_)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__tvoxeldictLN_TLorentzVector),-1,-1,1,"vox_coords_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->scalars_)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__tvoxeldictLN_TArrayD),-1,-1,1,"scalars_=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__tvoxeldictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvartvoxeldict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncLArVox(void) {
   /* LArVox */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__tvoxeldictLN_LArVox));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArVoxcLcLTVoxel(void) {
   /* LArVox::TVoxel */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel));
   G__memfunc_setup("TVoxel",610,G__tvoxeldict_179_0_1, 105, G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVoxel",610,G__tvoxeldict_179_0_2, 105, G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel), -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 11 - lvec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TVoxel",610,G__tvoxeldict_179_0_3, 105, G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel), -1, 0, 2, 1, 1, 0, 
"u 'TLorentzVector' - 11 - lvec u 'TArrayD' - 11 - scalars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__tvoxeldict_179_0_4, 85, G__get_linked_tagnum(&G__tvoxeldictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (TClass* (*)())(&LArVox::TVoxel::Class), 0);
   G__memfunc_setup("Class_Name",982,G__tvoxeldict_179_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&LArVox::TVoxel::Class_Name), 0);
   G__memfunc_setup("Class_Version",1339,G__tvoxeldict_179_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (Version_t (*)())(&LArVox::TVoxel::Class_Version), 0);
   G__memfunc_setup("Dictionary",1046,G__tvoxeldict_179_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (void (*)())(&LArVox::TVoxel::Dictionary), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__tvoxeldictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TMemberInspector' - 1 - insp C - - 0 - parent", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__tvoxeldict_179_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__tvoxeldict_179_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&LArVox::TVoxel::DeclFileName), 0);
   G__memfunc_setup("ImplFileLine",1178,G__tvoxeldict_179_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&LArVox::TVoxel::ImplFileLine), 0);
   G__memfunc_setup("ImplFileName",1171,G__tvoxeldict_179_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) (const char* (*)())(&LArVox::TVoxel::ImplFileName), 0);
   G__memfunc_setup("DeclFileLine",1152,G__tvoxeldict_179_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) (int (*)())(&LArVox::TVoxel::DeclFileLine), 0);
   // automatic copy constructor
   G__memfunc_setup("TVoxel", 610, G__tvoxeldict_179_0_16, (int) ('i'), G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel), -1, 0, 1, 1, 1, 0, "u 'LArVox::TVoxel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TVoxel", 736, G__tvoxeldict_179_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__tvoxeldict_179_0_18, (int) ('u'), G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel), -1, 1, 1, 1, 1, 0, "u 'LArVox::TVoxel' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunctvoxeldict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globaltvoxeldict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_functvoxeldict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__tvoxeldictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__tvoxeldictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__tvoxeldictLN_LArVox = { "LArVox" , 110 , -1 };
G__linked_taginfo G__tvoxeldictLN_LArVoxcLcLTVoxel = { "LArVox::TVoxel" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtabletvoxeldict() {
  G__tvoxeldictLN_TClass.tagnum = -1 ;
  G__tvoxeldictLN_TBuffer.tagnum = -1 ;
  G__tvoxeldictLN_TMemberInspector.tagnum = -1 ;
  G__tvoxeldictLN_TObject.tagnum = -1 ;
  G__tvoxeldictLN_TArrayD.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__tvoxeldictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__tvoxeldictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__tvoxeldictLN_TLorentzVector.tagnum = -1 ;
  G__tvoxeldictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__tvoxeldictLN_LArVox.tagnum = -1 ;
  G__tvoxeldictLN_LArVoxcLcLTVoxel.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtabletvoxeldict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TClass);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TObject);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__tvoxeldictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum(&G__tvoxeldictLN_LArVox),0,-1,0,(char*)NULL,G__setup_memvarLArVox,G__setup_memfuncLArVox);
   G__tagtable_setup(G__get_linked_tagnum(&G__tvoxeldictLN_LArVoxcLcLTVoxel),sizeof(LArVox::TVoxel),-1,62720,(char*)NULL,G__setup_memvarLArVoxcLcLTVoxel,G__setup_memfuncLArVoxcLcLTVoxel);
}
extern "C" void G__cpp_setuptvoxeldict(void) {
  G__check_setup_version(30051515,"G__cpp_setuptvoxeldict()");
  G__set_cpp_environmenttvoxeldict();
  G__cpp_setup_tagtabletvoxeldict();

  G__cpp_setup_inheritancetvoxeldict();

  G__cpp_setup_typetabletvoxeldict();

  G__cpp_setup_memvartvoxeldict();

  G__cpp_setup_memfunctvoxeldict();
  G__cpp_setup_globaltvoxeldict();
  G__cpp_setup_functvoxeldict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunctvoxeldict();
  return;
}
class G__cpp_setup_inittvoxeldict {
  public:
    G__cpp_setup_inittvoxeldict() { G__add_setup_func("tvoxeldict",(G__incsetup)(&G__cpp_setuptvoxeldict)); G__call_setup_funcs(); }
   ~G__cpp_setup_inittvoxeldict() { G__remove_setup_func("tvoxeldict"); }
};
G__cpp_setup_inittvoxeldict G__cpp_setup_initializertvoxeldict;

